[{"model": "timetable.presentation", "pk": 1, "fields": {"active": true, "conference": 1, "title": "The Truth of Mastering the Data", "description": "What do you think is the essential skill a data scientist should master? Knowledge of deep learning tools? Hadoop? SciPy? This talk reveals the cornerstone of data science: understanding the data and asking it right questions. All tools are just helping us to achieve it. <br /><br />We will start with tasks the data science solves, define our goals, and continue with an overview of essential Python packages available to us in this domain. There will be many demos, but the purpose of this talk is not just in showcasing tools. It's also about our role as data scientists, and the responsibility we need to take in today's world.", "type": 10, "speaker": 4, "youtube": "https://youtube.com/watch?v=RCM91S5QXWM"}}, {"model": "timetable.presentation", "pk": 2, "fields": {"active": true, "conference": 1, "title": "Natural Language Processing with Python", "description": "This talk is aimed at beginners in Natural Language Processing (NLP)\r\nand/ or Python and will show the power of Python in analysing text.\r\n<br /><br />\r\n<b>What will be covered:</b>\r\n<br /><br />\r\n Tokenization, Assigning Part-of-Speech tags \u2013 POS\r\ntagging, Segmentation, Exploring different types of corpora, Dictionary\r\nmethods, Indexing on different data types \u2013 strings, lists,\r\ndictionaries, Machine learning algorithms for text analysis, etc", "type": 10, "speaker": 11, "youtube": null}}, {"model": "timetable.presentation", "pk": 3, "fields": {"active": true, "conference": 1, "title": "Docs or it didn't happen", "description": "If you ever skimmed through a README, tried to follow a quickstart tutorial, attempted to decipher an error message, or typed '--help' in your console, congratulations -- you have encountered documentation! <br />Long gone are the days of massive books with never-ending stories about your software. Today's users are smarter and less patient, which means that we no longer need to document <b>all the things</b>, as long as what we do document is clear, concise, helpful, and accessible. And that's where the real work starts. <br /><br />Documentation requires some attitude adjustment, since prose doesn't neatly compile into binaries as code does. But Don't Panic(tm)! No matter what your role is in the community, you can apply a few key principles from the technical writing world to make your project more docs-friendly, and therefore more user- and contributor-friendly.", "type": 10, "speaker": 9, "youtube": "https://www.youtube.com/watch?v=aOTEDsTrGRw"}}, {"model": "timetable.presentation", "pk": 4, "fields": {"active": true, "conference": 1, "title": "Shipping quality software in hostile environments", "description": "Everyone loves features, right? Product loves features. Management loves features. The board loves features. Features are what make the users use and the investors invest, right?\r\n<br /> They certainly make the media pay attention. What happens when, for 8 years straight, all you care about is features? Productivity grinds to a halt, production outages are a given, post-mortems are a joke and job satisfaction and happiness are flatlining. <br /><br />Lessons learned unravelling layers and layers of terribleness to rediscover productivity and job satisfaction while also improving security and robustness of the products.", "type": 5, "speaker": 14, "youtube": "https://www.youtube.com/watch?v=jZsCrX1o0XI"}}, {"model": "timetable.presentation", "pk": 5, "fields": {"active": true, "conference": 1, "title": "Expand your toolkit for self-development", "description": "Moving towards consulting in the recent years has provided me with the opportunity to integrate within different clients environments and teams, thus exposing me to the unique set of learnings and challenges that come with each environment.\r\n<br /><br />\r\nI\u2019ve found that adapting, but not necessarily conforming has been essential. Challenging the norms, being curious and always learning has been key tools in my toolkit over the years. \r\n<br /><br />\r\nI\u2019d like to spend some time unpacking my tools to show you how I\u2019ve used them to twist, turns and fasten the bolts of my journey in order to create a steady and stable structure that has allowed me to grow and thrive within the development community.", "type": 5, "speaker": 13, "youtube": "https://www.youtube.com/watch?v=rRdOs3rIr1g"}}, {"model": "timetable.presentation", "pk": 6, "fields": {"active": true, "conference": 1, "title": "Tomorrow\u2019s Python", "description": "Python as a language is over 25 years old, and it\u2019s user base is still growing. This is a feat that only a handful of languages have ever achieved. But the Python of today isn\u2019t the same language that Guido van Rossum announced to the world in 1991 - it had to change in order to remain relevant, and into order to grow into new problem domains. What changes will Python need to embrace in order to remain relevant into the next 25 years? Will the Python of 2045 look like the Python of 2018?", "type": 5, "speaker": 10, "youtube": "https://www.youtube.com/watch?v=crcOUQoQn9Y"}}, {"model": "timetable.presentation", "pk": 7, "fields": {"active": true, "conference": 1, "title": "Computational models to predict when diseases turn epidemic", "description": "Infectious diseases affecting humans and animals still represent a major burden for our health, society and economy. For these reason, it is crucial to build synthetic models that can tell us what happens when a new pathogen appears. Will it go extinct on its own? Will it cause a widespread epidemics? What is the best way to intervene? \r\n<br /><br />\r\nThe biggest challenge in making that happen is integrating the simulation of the disease and the data describing the contacts and mobility patterns along which it spreads. And Python is the best for doing just that. Focusing on different case studies, I will show you how to build Python-based libraries that handle input data, perform simulations, analyze the output and make predictions. \r\n<br /><br />\r\nThese libraries can also be turned into a sharable, standardized tool, that can be used by data holders and public health officials, without requiring advanced technical knowledge.", "type": 10, "speaker": 5, "youtube": "https://www.youtube.com/watch?v=Agvo7WJtc2s"}}, {"model": "timetable.presentation", "pk": 8, "fields": {"active": true, "conference": 1, "title": "On the Edge of Leadership", "description": "After several years of fairly regular software developer career path, I've found myself in a new role that I've unconsciously put myself into. Being a solid senior developer, management at the time agreed that I am a good candidate for the team lead.<br /> Being promoted to a new personal level of incompetence I felt lost and confused in my new role, but made a pact with myself to see this one through to the end.<br /> \r\nAnd so it came that for the past few years, I\u2019ve been development team lead for several teams. \r\n<br /> <br /> \r\nWith zero formal training, relying on my intuition and various random pieces of advice I picked up from people smarter than me I've more or less successfully lead my teams to their goals. On that path, I\u2019ve learned tremendously, improved myself and hopefully, my teams. I've would like to share what worked and what didn\u2019t, my emotions, my regrets, and my wins.", "type": 10, "speaker": 15, "youtube": "https://www.youtube.com/watch?v=zbbbkpAOojM"}}, {"model": "timetable.presentation", "pk": 9, "fields": {"active": true, "conference": 1, "title": "Python for hardware", "description": "Know a little Python? That's all you need to get started in the world of IoT and embedded software. You get yourself a nice low lost single-board computer, a couple of wires, sensors, buttons, motors, uranium,  whatever you like, and the fun begins. Build your own smart house system or a cleaning robot.\r\n<br /><br />\r\nThe fun, however, ends very soon. As the lines of code start to pile up, it gets increasingly hard to make any changes to the code or upgrade it. Bugs start to appear. And before you know it, you don\u2019t have a reliable product anymore. \r\n<br /><br />\r\nThere is little guidance on how to write code for hardware. That\u2019s why I want to share what I\u2019ve learned (mostly from my own mistakes).", "type": 10, "speaker": 17, "youtube": "https://www.youtube.com/watch?v=6AiXuHyYewU"}}, {"model": "timetable.presentation", "pk": 10, "fields": {"active": true, "conference": 1, "title": "Django in the real world", "description": "There are a lot of projects and systems out there built on top of django. From complex high profile systems and intranets to simple websites and personal blogs. \r\n<br /> <br />\r\nTruth is, in most of the cases the out of the box django setup will sufice, but in some cases, the team will need to make the project scale to serve thousands of requests per minute.\r\n<br /> <br />\r\nThere's no recipe to scale a project, that's true, but there are some strategies and techniques you can apply to your django project to improve your system's scalability and take more out of your available resources. All of this requires to have some clear Software Engineering concepts, know your tool and some other tools to measure your project's performance to know what and where to optimize\r\n<br /> <br />\r\nIn this talk, we will study some of these strategies to solve the most common scalability problems in django applications.\r\n<br /> <br />\r\nWe will go through a list of issues in real life production services and how we managed to solve them. We will go through  the issues we faced on some of our services and how we solved them with  real life examples.", "type": 10, "speaker": 16, "youtube": "https://www.youtube.com/watch?v=k520PnB-xHo"}}, {"model": "timetable.presentation", "pk": 11, "fields": {"active": true, "conference": 1, "title": "Querysets can do that?", "description": "We divide the ORM features in several buckets to explain them:\r\n<br /><br />\r\n<b>Basics</b>\r\n<li>Not so basic</li> \r\n<li>Special Objects</li>\r\n<li>Functions</li>\r\n<li>Query expressions</li>\r\n<li>Raw SQL</li>\r\n<br />\r\nThey're not in any particular order.\r\n<br /><br />\r\nDuring this talk we will go through the most basic ORM features such as <code>get()</code> and <code>filter()</code>, going through\r\nthe no-so-basic like <code>prefetch_related()</code>, <code>select_related()</code>, <code>aggregate()</code> and <code>annotate()</code> and also explore\r\nthe more advanced options like <code>Q()</code> and <code>F()</code> objects and SQL Function wrappers.", "type": 10, "speaker": 16, "youtube": "https://www.youtube.com/watch?v=-lz2HmjZxHI"}}, {"model": "timetable.presentation", "pk": 12, "fields": {"active": true, "conference": 1, "title": "Using Python to improve my Fantasy Basketball team", "description": "Fantasy sport is an online game where participants assemble imaginary teams of real professional athletes. Each team collects points based on the performance of the athletes on the weekly games.\r\n<br /><br />\r\nIn this talk, we will see how I used Python, mathematics and Machine Learning in order to predict athletes' performance and improve my team's ratings.\r\n<br /><br />\r\nThe talk will be consisted of environment setup instructions and sample code for all the steps of the process:\r\n\r\n<li>Collect historical data</li>\r\n<li>Find useful statistic categories</li>\r\n<li>Predict future player performance</li>", "type": 10, "speaker": 18, "youtube": "https://www.youtube.com/watch?v=ab9xMKrcuoM"}}, {"model": "timetable.presentation", "pk": 13, "fields": {"active": true, "conference": 1, "title": "Packaging Python applications", "description": "Packaging Python applications is important when shipping software. There are a couple of established ways to do it\r\nand documentation has gotten much better over the years. \r\n<br /><br />\r\nThere are less known ways to ship Python packages,\r\nthat have been developed based on PEP 273 or on the basis of packaging systems of Linux distributions.\r\n<br /><br />\r\nContainer technology can help to address complex dependency issues. It is this talk\r\nvarious options for shipping Python software application and libraries are presented and explored.", "type": 10, "speaker": 19, "youtube": "https://www.youtube.com/watch?v=Nqr3C2mIs2U"}}, {"model": "timetable.presentation", "pk": 14, "fields": {"active": false, "conference": 1, "title": "Batch workflow orchestration with Luigi", "description": "Luigi is a Python module that helps you build complex pipelines of batch jobs. It handles dependency resolution, workflow management, visualization. It is used by many companies to organize and manage complex data workflows.\r\n<br /><br />\r\nOne nice thing about luigi is that it is simple to start with and it can be a useful helper, even when working with smaller amounts of data. On the other hand, luigi can scale to big data projects as well, with Hadoop and HDFS support built-in.\r\n<br /><br />\r\nThis workshop introduces the library in a hands-on fashion and highlights the core ideas, that make this library powerful, and also pythonic. Under the hood, luigi uses advanced Python construct in order to expose a elegant and simple interface. \r\n<br /><br />\r\nAfter this workshop participant should have a good idea, what luigi can be used for and should be able to write data processing pipelines themselves.", "type": 15, "speaker": 19, "youtube": null}}, {"model": "timetable.presentation", "pk": 15, "fields": {"active": true, "conference": 1, "title": "We need millions of images, and we need them yesterday", "description": "In this talk we analyze how AWS S3 + Lambda helped us grab image metadata (such as resolution, dominant color and optimal cropping) from tens of millions of images, from various datasets, saving our client a good chunk of $ and us the pain of dealing with the usual \"boring\" concurrency issues (workload distribution, synchronization, etc.). \r\n<br /><br />\r\nAll done in, of course, good ol' Python ;)", "type": 10, "speaker": 20, "youtube": "https://www.youtube.com/watch?v=KDq-A07fX0o"}}, {"model": "timetable.presentation", "pk": 16, "fields": {"active": true, "conference": 1, "title": "Migrating an older code base to Python 3: the expected - and the unexpected", "description": "Python 3 is used extensively inside Facebook, but this was not always the case: \r\n<br />\r\nthere are some large services written years ago that sometimes need to be brought into the new world as new features need to be added, features available in Python 3 libraries only.\r\n<br /><br />\r\nWhile there are semi-automated tools that can help with such migrations and also some very well known \"gotchas\" - e.g. print function syntax or differences when rounding floating point numbers, sometimes things do not go as planned. \r\n<br /><br />\r\nOne such service, when migrated to Python 3, has started to exhibit a memory leak that was not present before, keeping us puzzled for days. This talk will tell the story on how we got to solve a problem that, at some point, seemed to have no acceptable solution.", "type": 10, "speaker": 21, "youtube": "https://www.youtube.com/watch?v=EMQ-2risTcU"}}, {"model": "timetable.presentation", "pk": 17, "fields": {"active": true, "conference": 1, "title": "Deploying Complex Application Stacks with Ansible", "description": "In todays climate the need for agility and automation in deploying and managing complex application stacks are more demanding than ever. In this talk I'm going to go over deploying complex application stacks (using Elasticsearch / ELK as an example), best practices, lessons learned and a demo (on my laptop).", "type": 10, "speaker": 22, "youtube": null}}, {"model": "timetable.presentation", "pk": 18, "fields": {"active": true, "conference": 1, "title": "Service Monitoring Manual, 2018 edition", "description": "Monitoring a.k.a figuring out what production code is doing is an extremely important topic. Modern software systems can be incredibly complex, code running on thousands of machines, depending on services we don't control and running code on user devices. Monitoring services the right way can have a profound impact on the work we do.\r\n<br /><br/>\r\nAt Facebook Production Engineering, we've learned some lessons over the years. This talk will aim to give an overview of how far we've come from piping tail to grep, and look into a modern service monitoring infrastructure.", "type": 10, "speaker": 23, "youtube": "https://www.youtube.com/watch?v=5nmTal1ssAM"}}, {"model": "timetable.presentation", "pk": 19, "fields": {"active": true, "conference": 1, "title": "Modelling dynamical systems in Python", "description": "causaLens is a platform that automatically builds time series/dynamic system models. It is a system built on the principles of big-data processing with high performance computing in mind and its fully implemented in Python.\r\n<br /><br />\r\nMost of the today's world processes can be expressed in some form of a dynamic system and time series play a big role in representing the data that is generated by the mentioned processes. These processes are difficult to deal with as underlying distributions of the data, the models and system behaviour change over time. As such online, adaptive, on-the-fly dynamic calculations are key to effective model building.  \r\n<br /><br />\r\nWhen building online models, one also has to think hard about state, especially in the high-availability setting. In this talk we will take the audience through an exploration of how we build big-data, buffering, alignment and calculation processes in Python, utilizing Numpy and Tensorflow.", "type": 10, "speaker": 24, "youtube": "https://youtu.be/pdBqPinCEcw?list=PL28KihL4TS3C0p0WvIdd-bYqk5Te3LWYu"}}, {"model": "timetable.presentation", "pk": 20, "fields": {"active": true, "conference": 1, "title": "Understanding multithreading by deciphering the cpython interpreter source code", "description": "In this talk, I will provide a concise understanding of Threading and Global Interpreter Lock(GIL) in Python.\r\n<br /><br />\r\nIn the modern era of hybrid cores and processors, there is an in demand need for concurrent and parallel programming paradigms. Python, since its inception has amazing support for single threaded applications. The extensive use of Python in booming fields like Machine Learning has paved the way to constantly improve multi-threaded applications in Python.\r\n<br /><br />\r\nI will speak from ground level covering very crucial aspects of Threading and Locks which will pave the way for community to develop better Python applications.\r\n<br /><br />\r\n<h3>Content to be covered:</h3>\r\n<br /><br />\r\n<b>1. Threading for noobs:</b>\r\n<br /><br />\r\nTerminologies: Process, threads, multithreading, multiprocessing, types of threads, locks, mutex, CPU and I/O bound processes.\r\n<br />\r\nMultithreading in Python: Threading module (with example)\r\n<br />\r\nComparative analysis of Sequential vs Multithreaded execution in Python (with example)\r\n<br /><br />\r\n<b>2. Understanding the global interpreter lock (GIL):</b>\r\n<br /><br />\r\nWhat and why of GIL\r\n<br />\r\nImpact of GIL on CPU and I/O Bound Processes\r\n<br />\r\nIn-depth understanding of GIL using cpython interpreter source code\r\n<br />\r\nReference counting\r\n<br />\r\nTicks via context switching\r\n<br /><br />\r\n<b>3. Infamous concepts:</b>\r\n<br /><br />\r\nCooperative vs Preemptive multitasking\r\n<br />\r\nParallelism vs Concurrency\r\n<br />\r\nThread Safety in Python\r\n<br /><br />\r\n<b>4. Removing the GIL:</b>\r\n<br /><br />\r\nFamous GIL removal patch\r\n<br />\r\nGuido on GIL, Larry Hastings Gilectomy\r\n<br /><br />\r\n<b>5. Questions</b>", "type": 10, "speaker": 25, "youtube": "https://www.youtube.com/watch?v=zlKf0a2wlvw"}}, {"model": "timetable.presentation", "pk": 21, "fields": {"active": true, "conference": 1, "title": "Competitive programming using Python", "description": "Competitive programming is really a fantastic discipline to improve your programming and math skills. The idea is very simple given well-known computer science problems, solve them as quickly as possible. \r\n<br /><br />\r\nFrom another point, these challenges have been used frequently in the initial coding interview tasks. Usually all participants uses C/C++/Java, but last decade we can see increasing trend of contestants who uses Python in programming challenges.", "type": 10, "speaker": 26, "youtube": "https://www.youtube.com/watch?v=-FuUF6HQvvA"}}, {"model": "timetable.presentation", "pk": 22, "fields": {"active": true, "conference": 1, "title": "Zen of Python in Action", "description": "The presentation's topic is large scale evolvable Python software systems. The audience will learn how and why principles of software engineering in the context of <b>The Zen of Python</b> materialize in practice. \r\n<br /><br />\r\nAccording to recent report \"Developers, despair: Half your time is wasted on bad code\" (see <a target=\"_blank\" href=\"https://www.zdnet.com/article/developers-despair-half-your-time-is-wasted-on-bad-code/\">this link</a>) \"<i>...companies around the world are collectively losing about $300 billion a year by wasting developer resources on fixing maintenance issues...</i>\" The talk will illustrate on concrete cases what it means to properly fix existing code, how to craft proper APIs, why being explicit helps avoid dangerous defects in production, etc.\r\n<br /><br />\r\nThe presentation will revolve around code excerpts with theoretical explanations. The focus will be on pragmatic approaches to achieve high quality and reduce wasted time on correcting bugs. This will be an opportunity for developers of all skill levels to see rules in action, whilst managers will get crucial insights why investing in quality upfront is the right way to go. No special knowledge, except basic Python, is required to follow along the talk.", "type": 10, "speaker": 27, "youtube": "https://www.youtube.com/watch?v=FgqYPAwQ4OE"}}, {"model": "timetable.presentation", "pk": 23, "fields": {"active": true, "conference": 1, "title": "Drive your own IoT device in a snap with cloud services", "description": "Based on an inexpensive board (Raspberry Pi), a couple of sensors, a few lines of Python code, and cloud services, this live demo will show you how easy it is to build your own monitoring device, drive it from anywhere, and more\u2026 After this session, you'll be ready to do it yourself!", "type": 10, "speaker": 28, "youtube": "https://www.youtube.com/watch?v=s4hbCH-O1W8"}}, {"model": "timetable.presentation", "pk": 24, "fields": {"active": true, "conference": 1, "title": "Refactoring in Python: design patterns and approaches", "description": "This talk will describe experiences and lessons learned from tackling extremely demanding code. How to bring order to mismanaged code and elevate the code base to a standard that's acceptable in today's tech environment.\r\n<br /><br />\r\nNot every code-base can be rewritten, not everything can be done from scratch. Cool libraries often take a lot of liberty with code structure and make cross-integration difficult, if not impossible. Tests sound ideal, but in practice, they're just so hard to make right. Why is this, and how to change it?\r\n<br /><br />\r\nThe talk will tackle the problems in three parts: \r\n<br /><br />\r\n<li>The Easy Wins: What to do to instantly increase the code quality in your organisation.</li>\r\n<br />\r\nHow? Why isn't it enough?\r\n<br /><br />\r\n<li>Patterns and Antipatterns: How to identify code that \"smells\", how to replace\r\nit?</li>\r\n<br />\r\nHow to integrate into old code, better?\r\n<br /><br />\r\n<li>The Philosophy: What approach to set down for the future? Why to care? How to write replace-able code. How to prevent history from repeating.</li>\r\n<br /><br />\r\nThe talk will close with audience discussion and experiences, questions and proposals - building a collection of some on-premise tips and tricks.", "type": 10, "speaker": 29, "youtube": "https://www.youtube.com/watch?v=hEsNiCMnGG0"}}, {"model": "timetable.presentation", "pk": 25, "fields": {"active": true, "conference": 1, "title": "Distributed computing and hyper-parameter tuning with Ray", "description": "Come for a while and learn how to execute your Python computations in parallel, to seamlessly scale the training of your machine learning models from a single machine to a cluster, find the right hyper-parameters, or accelerate your Pandas pipelines with large dataframes.\r\n<br /><br />\r\nIn this talk, we will cover Ray in action with plenty of examples.\r\nRay is a flexible, high-performance distributed execution framework. Ray is well suited to deep learning workflows but its utility goes far beyond that.\r\n<br /><br />\r\nRay has several interesting and unique components, such as actors, or Plasma - an in-memory object store with zero-copy reads (particularly useful for working on large objects), and includes powerful hyper-parameter tuning tools.\r\n<br /><br />\r\nWe will compare Ray with its alternatives such as Dask or Celery, and see when it is more convenient or where it might even completely replace them.", "type": 10, "speaker": 30, "youtube": "https://www.youtube.com/watch?v=aESpD5pW54A"}}, {"model": "timetable.presentation", "pk": 26, "fields": {"active": true, "conference": 1, "title": "Behave parallel run on Docker", "description": "If you want to deliver software of the highest quality, you must have well-written tests that should be short and give reliable results.\r\n<br /><br />\r\nAutomated tests connected with complex applications are usually slow because of a high number of scenarios and necessity to check multiple factors. How cool it would be to have this executed in minutes instead of hours? \r\n<br />\r\nHow cool it would be to have the result of all functional tests connected with CI build?\r\n<br />\r\nIs there any chance to completely abandon manual testing?\r\n<br /><br />\r\nI will try to answer these questions in my presentation and tell my story with behave tests about what we did wrong and how we set execution times to absolute minimum thanks to Docker containers.", "type": 10, "speaker": 31, "youtube": "https://www.youtube.com/watch?v=qOXrOH7OiE8"}}, {"model": "timetable.presentation", "pk": 27, "fields": {"active": true, "conference": 1, "title": "Everything you did NOT want to know about generators", "description": "Generators are one of the most neglected language features in python education. Usually, you get told that they're used as \"a cool way\" of feeding for loops. However, that was in 2002 and this particular feature makes about 5% of what they're capable of now. This overview paints the full picture of one of the most interesting language features in python and its capabilities. If you belong to the 5% group, you'll see everything your python instructor did not tell you.", "type": 10, "speaker": 32, "youtube": "https://www.youtube.com/watch?v=LPoDBKPB1zo"}}, {"model": "timetable.presentation", "pk": 28, "fields": {"active": true, "conference": 1, "title": "Recommender Systems - Collaborative filtering and dimensionality reduction", "description": "Recommender systems are considered as an inevitable part of any system that is offering some\r\nkind of products/services to the final user. System complexity can range anywhere from simple\r\nwebstores displaying few dozen articles to big web applications with complex architecture\r\noffering millions of items to as many users.\r\n<br /><br />\r\nAs the systems grew bigger, rising need of efficiently handling and presenting that amount of\r\ndata in a meaningful manner emerged. Early steps were focused on good categorization of\r\navailable items, improving browsing capabilities and providing intelligent search. But the main\r\naspect of user engagement remained the same. User had to take action in order to have the\r\nitems presented to them. This is where the recommender systems came in, radically changing\r\nthe way how the end users are experiencing the whole platform. Instead of browsing the\r\nplatform in order to discover something new and relevant, the items are directly presented to the\r\nuser based on previous experience, not just from their particular history of actions but from the\r\nexperience of the whole user community as well.\r\n<br /><br />\r\nOver the years, variety of techniques have been developed for building recommender systems,\r\nincluding content-based, collaborative each having their own pros and cons. We\u2019ll cover both of\r\nthem offering relative insight how to treat some of the challenges involved in dealing with this\r\nkind data like matrix sparsity, dimensionality reduction etc.", "type": 10, "speaker": 33, "youtube": "https://www.youtube.com/watch?v=PZrXjR-mm5k"}}, {"model": "timetable.presentation", "pk": 29, "fields": {"active": true, "conference": 1, "title": "Meeting kills people", "description": "We all participate in meetings. Quite often we sit and \"survive\" bad meetings, not considering that we actually can change them. In this talk, we will discover most annoying characteristics of meetings and how to fix them. At the end, you will know how to improve the meetings you are attending.", "type": 10, "speaker": 34, "youtube": "https://www.youtube.com/watch?v=GVdYR4NZOl0"}}, {"model": "timetable.presentation", "pk": 30, "fields": {"active": true, "conference": 1, "title": "Testable code: making the (testing) world better", "description": "Sometimes it is tough to make the code testable, especially in a large, legacy codebase, but I'd like to tell you some approaches and tips, that could help you to make your code more maintainable, understandable and reliable.", "type": 10, "speaker": 35, "youtube": "https://www.youtube.com/watch?v=iM72W8ShZjE"}}, {"model": "timetable.presentation", "pk": 62, "fields": {"active": true, "conference": 1, "title": "Running a coding academy in the balkans", "description": "This talk will go around the things that we are doing with HackBulgaria - our \"hacker school\", where we do a lot of Python & Django courses, aimed for people that are going to start their first job after that.\r\n<br /><br />\r\nFor the last 4 years we did more than 20 courses & placed more than 200 people with employers.\r\n<br /><br />\r\nEverything is open & in this <a href=\"https://github.com/HackBulgaria\">repo</a>", "type": 10, "speaker": 67, "youtube": "https://www.youtube.com/watch?v=qRFp6S3DudE"}}, {"model": "timetable.presentation", "pk": 63, "fields": {"active": true, "conference": 1, "title": "Django ORM and queries optimization", "description": "This talk will be about:\r\n<br /><br />\r\n  - Django ORM architecture - from Graph to SQL query\r\n<br />\r\n  - Choosing the right data structure for the right DB data\r\n<br />\r\n  - How to optimize queries with Django ORM and solve `N+1 quieries` - annotations, aggregations and DB functions.", "type": 10, "speaker": 68, "youtube": "https://youtube.com/watch?v=FXzPY980d5E"}}, {"model": "timetable.presentation", "pk": 64, "fields": {"active": true, "conference": 1, "title": "Processing billions of events with Python in real time", "description": "In this session will present how we approach the hot/cold processing data pipeline design pattern here at Warply. Our infrastructure can scale into processing billions of events only with pythonic open source libraries without any cloud PaaS implementation.\r\n<br /><br />\r\nHot processing constitutes of a tornado, kafka, Dask/Celery microservices and cassandra/redis, stuck. While our cold storage performs the entire machine learning model training and validation with keras and tensorflow.", "type": 10, "speaker": 69, "youtube": "https://www.youtube.com/watch?v=Ex3v8Mu-cYA"}}, {"model": "timetable.presentation", "pk": 65, "fields": {"active": true, "conference": 1, "title": "Schedule notification API in Django REST Framework", "description": "In this 2 part workshop we will build a notification service along with appropriate functional tests.\r\n<br /><br />\r\nPowered by Django Rest Framework and TeleSign Messaging Platform, the service will expose Restful API to deliver text notification related to PyCon schedule.\r\n<br /><br />\r\nThe workshop will be on Friday and Saturday", "type": 15, "speaker": 70, "youtube": null}}, {"model": "timetable.presentation", "pk": 66, "fields": {"active": true, "conference": 1, "title": "Mastering Duct Tape", "description": "There's a lot of hard problems in software, but how many of them are created from decisions we make day to day? Let's talk about pragmatism and a number of difficult, but common situations where we often over-engineer solutions.", "type": 10, "speaker": 12, "youtube": "https://www.youtube.com/watch?v=4UPqHK9nNWM"}}, {"model": "timetable.presentation", "pk": 67, "fields": {"active": true, "conference": 2, "title": "Creative Jupyter - literate programming, exploration and collaboration", "description": "Jupyter grew out of the IPython project (2001) - a Python REPL on steroids. Since its inception in 2015, Jupyter has seen rapid growth and adoption in different settings: data science, teaching, exploration and collaboration.\r\n\r\nThe presentation briefly reflects on literate programming in general and highlights scenarios and useful techniques, as well as projects that are developing in the expanding Jupyter ecosystem, allowing people to get creative with data and code.", "type": 10, "speaker": 19, "youtube": null}}, {"model": "timetable.presentation", "pk": 68, "fields": {"active": true, "conference": 2, "title": "PhD not required: a layperson's guide to reading journal articles", "description": "The gap between industry & academics is wide and tough to bridge. Many people do not see technical papers as a useful source of information for us industry folks. Not only are they intimidating, they aren't always topical.. However, there are a ton of benefits to reading journal articles if you know where to look. You'll leave this talk wanting to find yourself a journal article or two, a beverage, and a quiet space so you can learn something new!", "type": 10, "speaker": 78, "youtube": null}}, {"model": "timetable.presentation", "pk": 70, "fields": {"active": true, "conference": 2, "title": "Hiring a Personal Investigator for your app", "description": "It has been a busy several years in monitoring and observability. Logging solutions are widely deployed, from scp+grep to proper federated logging. Collecting centralised server environment and resources metrics has also matured significantly. In this talk we'll introduce the next layer in this onion - in-depth Application Performance Monitoring (APM). While other parts of the monitoring stack could be described as watchpeople, APM plays much more of a detective role, bringing ever more metrics into increasingly complex UIs to suss out performance bottlenecks.\r\n\r\nWe'll talk a bit about the history of APM and show an example app being monitored with a free APM system (made by Elastic). We'll reflect on a case study of 2 of the speaker's old clients, 2 small web technology-driven organisations which could have gotten more out of their APM systems. We will look at why that might be and how you could do better. We will then walk through a simple vendor-agnostic approach to choosing an APM solution.", "type": 10, "speaker": 80, "youtube": null}}, {"model": "timetable.presentation", "pk": 71, "fields": {"active": true, "conference": 2, "title": "Event-Sourced Story", "description": "After three years of utilizing event sourcing at our company, I want to introduce to you its basics and share our experience acquired over that time - including complexity involved - so you can better assess whether it's a tool worth using in your case.", "type": 10, "speaker": 81, "youtube": null}}, {"model": "timetable.presentation", "pk": 72, "fields": {"active": true, "conference": 2, "title": "Topic Modeling: All Mistakes I Did, so You Don't Have To", "description": "With huge amount of textual data available today (especially when all the transcripts are included), it would be a shame to not get some interesting insights from it. Topic modeling can not be used just for categorization, but also for getting some new knowledge out of data. \r\n<br />\r\nThrough the anecdotes of my blunders, you will learn how to attempt your topic modeling project and realize that this is not that hard to do. And if you end up deciding that topic modeling is not for you, the you are still left with some random facts about cognitive science, discussions of programming on the internet, or other topics.", "type": 10, "speaker": 82, "youtube": null}}, {"model": "timetable.presentation", "pk": 73, "fields": {"active": false, "conference": 2, "title": "Entering the world of Serious Games with Python", "description": "Serious games are games whose primary purpose is not providing a source of entertainment. They are intricately researched and developed to help with medical treatment. One subclass deals with mental health treatment and this is an emerging field with a high scope for research. Serious games can work in these case scenarios:\r\n<br />\r\nThe military,\r\n<br />\r\nThe government,\r\n<br />\r\nThe education system, as well as,\r\n<br />\r\nHealth care systems.", "type": 10, "speaker": 83, "youtube": null}}, {"model": "timetable.presentation", "pk": 74, "fields": {"active": true, "conference": 2, "title": "No code is perfect", "description": "\"We write code so good we don't need debugging\" - ever heard this? I have, right before \"we can't find enough developers\".\r\n<br /><br />\r\nIt's almost near impossible to avoid using libraries (that inevitably have bugs) or to avoid working on projects that have issues.\r\nThere aren't so many places where you can do everything from scratch, and get it right from the start too. Thus being proficient\r\nwith debugging is way too rewarding to ignore.\r\n<br /><br />\r\nThis talk will compare various debugging tools or techniques, and will walk you through how you can detect a certain class of\r\nproblem at runtime using a tracer.", "type": 10, "speaker": 84, "youtube": null}}, {"model": "timetable.presentation", "pk": 75, "fields": {"active": true, "conference": 2, "title": "No Bulls*it Freelancer", "description": "Should you be a freelancer?\r\n<br /><br />\r\nGrowing and managing two parallel careers. What is it actually like to work for most terrible boss ever - yourself?\r\n<br /><br />\r\nIn this talk Tomislav speaks about growing as professional freelancer, shares all the good and the bad from his experience. How he does it, and is it all worth it.", "type": 10, "speaker": 85, "youtube": null}}, {"model": "timetable.presentation", "pk": 77, "fields": {"active": true, "conference": 2, "title": "Strawberry: a dataclasses inspired approach to GraphQL", "description": "Over the past few years GraphQL has gained much traction, especially in the JavaScript world. Python is getting on board this trend with new interesting libraries. In this talk we will see how Strawberry makes uses of modern Python features like dataclasses, type hints and async-io to easily create GraphQL APIs. We\u2019ll also discuss how django fits in a modern API-first world.", "type": 10, "speaker": 87, "youtube": null}}, {"model": "timetable.presentation", "pk": 78, "fields": {"active": true, "conference": 2, "title": "Barrel of a GAN", "description": "You have probably seen those beautiful hi-resolution photos of people that don't exist. These images are made by a special type of artificial neural networks - Generative Adversarial Networks. In this talk, we will talk about the basic structure of these networks, the ways they work and some variations. We will generate some \r\nnon-existing faces too.", "type": 10, "speaker": 88, "youtube": null}}, {"model": "timetable.presentation", "pk": 79, "fields": {"active": true, "conference": 2, "title": "GitHub Bots: Rise of the Machines \ud83e\udd16", "description": "Hello, fellow human \ud83e\uddd9!\r\n\r\nYou probably spend so much time doing recurring routines manually. What if I told you that you could skip it? What if I told you that you could spend this time better? Contribute to that tiny pet project of yours you never have time to complete? What if I told you how? Come.\r\n\r\nIn this talk, I'll share insights on how you can save time by automating recurring parts of your GitHub workflow with bots. We'll have a quick walkthrough of the tasks that can be automated and learn the important concepts of creating a bot with GitHub Apps. We'll also take a look at robots created for checking Pull-Requests for change fragments, running custom linter, and doing more creative stuff! If you have a couple of pseudo-user bots in your organization pretending to be humans, you'll also find out why you might want to reconsider.\r\n\r\nAfter this talk attendees will know about the ways of automating their flows based on GitHub Apps integrations. They'll be able to reason about ups and downs of replacing parts of their processes with robots.\r\n\r\n\r\nI'm co-maintaining [ansibullbot](https://github.com/ansible/ansibullbot) \u2014 the robot which empowers contributors of [Ansible Core Engine](https://github.com/ansible/ansible) to collaborate and makes it possible for them to merge patches to community-maintained modules.\r\n\r\nIt's far from perfect so last year I've started looking out for ways to improve it. During this time I've learned quite a lot about developing [GitHub Apps](https://developer.github.com/apps/) integrations, identified a number of problems with the Python ecosystem around those. So I'm currently trying to improve the situation, generalize common approaches and create a solid framework for writing bots for GitHub.\r\n\r\nI want to empower everyone to write workflow automations abstracting all the boring details away.", "type": 10, "speaker": 89, "youtube": null}}, {"model": "timetable.presentation", "pk": 80, "fields": {"active": true, "conference": 2, "title": "How I learned to love the Django Admin", "description": "The Django Admin is still relevant and widely usable in 2019. In fact it is one of best solutions for small to medium sized web applications, that need a simple data management admin interface. It is especially effective for projects that are under a tight budget constraint. \r\n<br /><br />\r\nDespite the frequent community bashing that Django receives, the Admin it is still highly applicable and worth learning.\r\n<br /><br />\r\nThis talk would encourage novice and intermediate Django developers to invest time in exploring the Django Admin. It will touch on use cases when the Admin is favored option over building a custom solution from scratch, and how the Admin can be the one of the main selling points when talking to potential customers.", "type": 10, "speaker": 90, "youtube": null}}, {"model": "timetable.presentation", "pk": 81, "fields": {"active": true, "conference": 2, "title": "Scaling Flask and Celery", "description": "Lessons learned from building a SaaS application (from 0 to 1000 businesses) for the past 3 years on how we scaled our Flask + Celery application.", "type": 10, "speaker": 91, "youtube": null}}, {"model": "timetable.presentation", "pk": 82, "fields": {"active": true, "conference": 2, "title": "If Statements are a Code Smell", "description": "Writing software is about making trade-offs between getting things done and doing them right. Time constraints often force us to take shortcuts to handle slight variations resulting in patches of conditional logic sprinkled throughout our codebase. Workarounds that once allowed us to move quickly now hinder our progress in getting new features out to customers. It doesn't have to be this way!\r\n<br /><br />\r\nThis talk will demonstrate how to use Object-Oriented programming patterns, specifically polymorphism, to handle conditional logic resulting in code that is easy to modify. The material will be presented in the context of a real-world code refactor for an open-source project. We will examine the initial solution, discuss its limitations, and walk through the process of refactoring nested `if` blocks into polymorphic classes.\r\n<br /><br />\r\nThe session is geared towards developers who do not have a lot of experience implementing Object-Oriented solutions. After this talk, you will be able to identify situations where Object-Oriented design can be used to simplify complex conditional logic. Using the steps outlined in this talk, you will be able to refactor code to improve software architecture without changing existing functionality.", "type": 10, "speaker": 92, "youtube": null}}, {"model": "timetable.presentation", "pk": 85, "fields": {"active": true, "conference": 2, "title": "Pipenv: Python Dev Workflow for Humans", "description": "Pipenv is a tool that aims to bring the best of packaging worlds (bundler, composer, npm, cargo, yarn, etc.) to the Python world. At Niteo we\u2019ve migrated a few projects away from zc.buildout to pipenv and the results are good. In this talk, I\u2019ll share the goods and the bads of the transition.\r\n<br /><br />\r\nhttp://pipenv.readthedocs.io/en/latest/ is now the officially recommended Python packaging tool from Python.org. But it\u2019s strongly opinionated and it can bite you if you don\u2019t know what to expect. I learned the hard way.\r\n<br /><br />\r\nWhat I am trying to say is, since it\u2019s now the officially recommended Python packaging tool, Pythonistas need to educate themselves about it. What it is, how to use it and what to be careful about. I\u2019ve used pipenv in production since last year and I have a few battle stories to tell.", "type": 10, "speaker": 95, "youtube": null}}, {"model": "timetable.presentation", "pk": 86, "fields": {"active": true, "conference": 2, "title": "Extending your static analysis for fun and profit", "description": "Static analysis tools are usually the domain of developers. However they can be extended with custom plugins which serve to detect specific problems in your software product and even used as an early test tool.\r\n<br /><br />\r\nFor example:\r\n<br />\r\n- enforcing naming and code style patterns<br />\r\n- enforcing best practices and constraints <br />dictated by libraries and frameworks\r\n- enforcing permissions specific to the <br />software under test<br />\r\n- discovery of missing tests or coding patterns which may lead to bugs\r\n<br /><br />\r\nThis presentation will cover examples from the Kiwi TCMS open source project and explain how our team uses customized pylint plugins to make the software better!\r\n<br /><br />\r\nWhile examples are specific to the tool and project the same principles can be applied across any programming language and static analysis tool.", "type": 10, "speaker": 96, "youtube": null}}, {"model": "timetable.presentation", "pk": 87, "fields": {"active": true, "conference": 2, "title": "Distributed Domain Destruction - Adventures in building distributed systems", "description": "For the last couple of years I have been building, maintaining and fighting a\r\nprojects that make use of distributed computing, parallel processing,\r\nmessage brokers, queues and workers. This is one of those \"from the\r\ntrenches\" talks, where I will regale you with tales about the series of\r\nunfortunate events that may happen as your application grows in complexity.\r\nTales like disk space fluctuations, importance of logging, NoSql problems,\r\nrestructuring your order of execution in code for performance gains, short\r\nsighted albeit logical architectural decisions that will cost you in the\r\nlong run.", "type": 10, "speaker": 97, "youtube": null}}, {"model": "timetable.presentation", "pk": 88, "fields": {"active": true, "conference": 2, "title": "4-wheeled Python with Raspberry Pi", "description": "Hey Pythonistas, have you ever thought of creating a project in IoT, home automation or just play with sensors as a hobby? Then this talk is for you!\r\n<br /><br />\r\nI want to share with you my passion and results with a project I did using Python, Raspberry Pi and other hardware devices. \r\nThe goal of the presentation is to show you how simple it is to use python on real life hardware projects, hoping that you will start playing with it, develop a hobby or even better, work with it on real life projects :)", "type": 10, "speaker": 98, "youtube": null}}, {"model": "timetable.presentation", "pk": 89, "fields": {"active": true, "conference": 2, "title": "How to train a neural network to classify screws by photo", "description": "Imagine, thousands of bolt and screw positions in the catalog, bulky filters, unclear product descriptions\u2026 all this is a headache for the retailer and its customers.\r\n<br /><br />\r\nHow to improve the customer journey through e-catalog and bring them to purchase? Let\u2019s make a visual search app to find exactly the same screw or bolt by a photo only! And Python gives us a full set of instruments for doing that.\r\n<br /><br />\r\nThe main difficulty of the solution lies in the scalability of the screw number that the app can recognize. After the presentation, you will get the full pipeline of building the visual search system from a scratch with Python.", "type": 10, "speaker": 99, "youtube": null}}, {"model": "timetable.presentation", "pk": 90, "fields": {"active": true, "conference": 2, "title": "Automating for an easier life: apartment hunting", "description": "This projects proposes using scraping, data science and some additional handy tools to find an apartment in a competitive renting market.", "type": 10, "speaker": 100, "youtube": null}}, {"model": "timetable.presentation", "pk": 91, "fields": {"active": true, "conference": 2, "title": "Introduction to Sign Language Recognition in OpenCV", "description": "The workshop would encompass a step by step walkthrough an implementation of the basic sign language alphabet recognition using OpenCV and CNN Model (VGG16). The workshop participants would receive a walkthrough tutorial written in Anaconda Notebook that they can download from the github page. During the workshop, I would give the overview of the CNN architecture and most relevant terminology from the image recognition realm such as Convex Hull, Background subtraction,\r\ntest and train data split, feature detection and Euclidean distance. The workshop is based on my Bachelor Thesis proposal which I am currently working on. The proposal can be found here: https://ewaszyszka.myportfolio.com/bachelor-thesis-proposal. Some of my preliminary results can be also found under this link. The difference between the workshop and the proposal would be that I would like to implement all of the workshop materials using CNN models as they are state-of-the-art of sign language recognition.", "type": 15, "speaker": 101, "youtube": null}}, {"model": "timetable.presentation", "pk": 92, "fields": {"active": true, "conference": 2, "title": "Keynote talk", "description": "TBD", "type": 5, "speaker": 75, "youtube": null}}, {"model": "timetable.presentation", "pk": 94, "fields": {"active": true, "conference": 2, "title": "The Fallacy of Meritocracy", "description": "Meritocracy is a society governed by people selected according to merit. But despite all our best intentions, does meritocracy work? When will we accept a system based on merit, and how long do we have to keep talking about discrimination?", "type": 5, "speaker": 73, "youtube": null}}, {"model": "timetable.presentation", "pk": 95, "fields": {"active": true, "conference": 2, "title": "Pioneering Real-Time", "description": "\"Real-time\" is a popular term on the modern Web - from AJAX to async, it's often used to talk about systems that respond quickly to user input. But what about true real-time programming?\r\n<br /><br />\r\nWe'll look back in history, at the origins of software engineering, and how some of the pioneers of our field not only invented real-time programming, but also saved the moon landing in the process - and how their work lives on in true life-critical software engineering, and what we can learn from it.", "type": 5, "speaker": 72, "youtube": null}}, {"model": "timetable.presentation", "pk": 96, "fields": {"active": true, "conference": 2, "title": "Python and computational social science", "description": "The idea that social phenomena should also follow precise quantitative such as one existing in physics is more than two centuries old. We still lack social science equivalent to Newton's laws. One of the reasons for this is the deficiency of large detailed data about human social behaviour. The rapid development of information and communication technologies has changed this. Social data at a large scale is nowadays available over the internet. \r\n<br /><br />\r\nWe need tools that allow us to collect, store and analyze these massive amounts of data. Scientists from different fields including mathematics, statistics, computer science, physics, sociology and economics adapt old and develop new methods to search for statistical laws of social phenomena in this data. They all contribute to the development of new field commonly known as 'computational social science'. Python has an essential role in the development of this new interdisciplinary field. It is comprehensive, flexible and easy to learn and use. Its extensive standard library and collection of modules, as well as a large community of developers, makes it sufficient for doing research in computational social science. I will demonstrate its comprehensiveness and sufficiency on examples from my research. I will discuss in more details the modules used for analyzing complex networks and their visualization.", "type": 5, "speaker": 74, "youtube": null}}, {"model": "timetable.presentation", "pk": 97, "fields": {"active": false, "conference": 2, "title": "Intro to integrating search into your Django app", "description": "For anyone building something that needs search, the presenter will be available at the conf outside of this session for 1:1 discussions on what you're trying to do with search & discovery, how it might help or what excites you about the possibilities it opens up.", "type": 15, "speaker": 80, "youtube": null}}, {"model": "timetable.presentation", "pk": 98, "fields": {"active": false, "conference": 2, "title": "Hands-on: Creating GitHub Bots \ud83e\udd16 to deal with boring routines", "description": "Hello, fellow human \ud83e\uddd9!\r\n\r\nYou probably spend too much time regretting that manual recurring routines don't do themselves. Let's change this! Learn how to save yourself from the maintenance burden and get your life back! This workshop will empower you to automate all the things using GitHub Apps integration type as reusable restless workers helping you overcome typical maintainer frustrations.\r\nWe'll have a walkthrough of the complete application creation and deployment process: from creating an App entity in the GitHub UI, to actual coding and to shipping your code via Heroku.\r\n\r\nTo participate in the hands-on, bring your laptop with Python 3.7 and some editor on-board. You'll also need to have a GitHub account.\r\n\r\nAgenda:\r\n\r\n1. Express intro into what bots are. How they are related to our coding activities. Creative use of robots.\r\n2. Showing-off what GitHub APIs integration of GitHub Apps type gives access to. Usage flows. Checks API. Auth levels. Rate limits. Lifecycle.\r\n3. GitHub App creation. Deep dive into how it works.\r\n4. Deployment to Heroku \ud83d\ude80.\r\n5. Debugging: inspection of webhook events via UI.\r\n6. Concluding ideas.\r\n\r\n\r\nI'm co-maintaining [ansibullbot](https://github.com/ansible/ansibullbot) \u2014 the robot which empowers contributors of [Ansible Core Engine](https://github.com/ansible/ansible) to collaborate and makes it possible for them to merge patches to community-maintained modules.\r\n\r\nIt's far from perfect so last year I've started looking out for ways to improve it. During this time I've learned quite a lot about developing [GitHub Apps](https://developer.github.com/apps/) integrations, identified a number of problems with the Python ecosystem around those. So I'm currently trying to improve the situation, generalize common approaches and create a solid framework for writing bots for GitHub.\r\n\r\nI want to empower everyone to write workflow automations abstracting all the boring details away.", "type": 15, "speaker": 89, "youtube": null}}, {"model": "timetable.presentation", "pk": 99, "fields": {"active": true, "conference": 2, "title": "NLP for Dinner - Chatbot language learning", "description": "I used Python + Rasa NLU powered by Tensorflow and Recurrent neural Networks architecture to create a bot that understands and texts in Czech. Why ? The bot created with Python + RASA + NLP Techniques is currently helping me to learn a new\r\nlanguage and prepare myself for real case situations, such as order food in a foreign country. The domain of the chatbot so far is Order food so my Waiter bot has a real impact in my life, because being Colombian and living in Prague, the language is a\r\nbig challenge, I took Czech lessons for beginners and rapidly I found out that the traditional way of teaching, prepares you for Saying things, but does not train you to process the reply and talk back, so I used Tensorflow and Built a Chatbot that simulates being a waiter and 'speaks' Czech to me.\r\n<br /><br /><br /><br />\r\nI use it from time to time as a Sparring partner and now I am able to order food all by myself, thanks to my Bot trained in Czech.\r\nWith my bot who speaks Czech, I simulate scenarios in which I\r\nvisit a restaurant and the bot process my order if I text back in\r\nCzech the proper entities.\r\n<br /><br />\r\nThe audience can benefit from this talk in a way that they can see through my use case how they do the same in their lives. Learn about NLP beyond the hype and see the concepts applied to something that can relate to many of us: Starting a new life abroad.", "type": 10, "speaker": 106, "youtube": null}}, {"model": "timetable.presentation", "pk": 100, "fields": {"active": true, "conference": 2, "title": "Snakes and Magic", "description": "We were given a bit strange set of requirements asking of us to make Python not work as it regularly does. We accepted the challenge and dared to delve deep into Python's magic. I will talk about what we learned along the way and what Python functionalities and features (and hacks) we had to use and why. There will be mentions of operators, meta classes, descriptors, attribute access mechanisms and of course magic methods.", "type": 10, "speaker": 105, "youtube": null}}, {"model": "timetable.presentation", "pk": 101, "fields": {"active": true, "conference": 2, "title": "Pair Programming: The Agile Technique That Makes Developers Groan or Grin", "description": "Research supports the benefits of pair programming including higher quality code and transfer of knowledge, yet the mention of pair programming often elicits groans from software developers. We will explore the benefits and break down costs in the context of a successful project developed exclusively by remote pair programming, arming developers with tips and strategies for successfully pairing.", "type": 10, "speaker": 107, "youtube": null}}, {"model": "timetable.presentation", "pk": 102, "fields": {"active": true, "conference": 1, "title": "Python in NLP", "description": "TBD", "type": 10, "speaker": 108, "youtube": "https://www.youtube.com/watch?v=KknlLDNoV68"}}]